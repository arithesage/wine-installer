#!/bin/bash

function abort
{
    REASON=$1

    if [ "$REASON" == "" ];
    then
        echo $REASON
    fi

    echo ""
    
    exit 1
}


function usage
{
    echo "Usage: boxify-wine <Wine path>"
    echo ""
    echo "Create an script for every Wine executable that calls"
    echo "Box86 or Box64, depending of the executable architecture."
    echo ""
}


if ! [ "$TERMUX_VERSION" == "" ];
then
    abort "This script isn't for Termux."
fi


sudo -v

if ! [ "$?" == "0" ];
then
    abort "You need to be root, or have sudo permissions."
fi


if [ "$1" == "" ] || [ "$1" == "-h" ] || [ "$1" == "--help" ];
then
    usage
    abort
fi


SCRIPT_DIR=$(realpath $(dirname $0))




WINE_PATH=$1


if ! [ -f "${WINE_PATH}/.wine_branch" ];
then
    abort "Wine not detected '$WINE_PATH'."
fi


WINE_BRANCH=$(cat "$WINE_PATH/.wine_branch")
WINE_VERSION=$(cat "$WINE_PATH/.wine_version")

WINE_BINARIES="${WINE_PATH}/opt/wine-${WINE_BRANCH}/bin"


if [ -f "${WINE_BINARIES}/wineboot-x86" ];
then
    abort "This Wine installation has been boxified already."
fi


if ! [ -f "/usr/local/bin/box86" ];
then
    echo "WARNING: Box86 was not found. You can't boxify Wine32 executables."
fi

if ! [ -f "/usr/local/bin/box64" ];
then
    echo "WARNING: Box64 was not found. You can't boxify Wine64 executables."
fi

if ! [ -f "/usr/local/bin/boxify" ];
then
    abort "Can't find boxify."
fi


echo "Located Wine binaries: ${WINE_BINARIES}"
echo ""


echo "Boxifying Wine ${WINE_VERSION} (${WINE_BRANCH}) at ${WINE_PATH} ..."
echo "-------------------------------------------------------------------"

while IFS= read -r filename;
do
    if [ -f "${WINE_BINARIES}/${filename}" ];
    then
        sudo boxify "${WINE_BINARIES}/${filename}"
    fi
done < "$SCRIPT_DIR/wine-binaries"


#echo ""
#echo "Updating symlinks ..."
#echo "---------------------" 

#sudo ln -sf "${WINE_PATH}/bin/winegcc" "${WINE_PATH}/bin/winecpp"
#sudo ln -sf "${WINE_PATH}/bin/winegcc" "${WINE_PATH}/bin/wineg++"


echo "Done. Execute switch-wine ${WINE_PATH} to use this installation."
echo ""



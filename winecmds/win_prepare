#!/bin/bash

function abort
{
    REASON=$1

    if [ "$REASON" == "" ];
    then
        echo $REASON
    fi

    echo ""
    
    exit 1
}


function install_activator
{
    WINEPREFIX=$1
    WINEARCH=$2

    ACTIVATOR=$WINEPREFIX/activate

    echo "export WINEPREFIX=\"$WINEPREFIX\"" > "$ACTIVATOR"
    echo "export WINEARCH=$WINEARCH" >> "$ACTIVATOR"
    echo "export WIN_C=\"$WINEPREFIX/drive_c\"" >> "$ACTIVATOR"
    echo "export WIN_D=\"$WINEPREFIX/drive_d\"" >> "$ACTIVATOR"
    echo "export WINEDEBUG=-all" >> "$ACTIVATOR"

    echo "echo \"WINE prefix '$WINEPREFIX' activated.\"" >> "$ACTIVATOR"
    echo "echo \"\"" >> "$ACTIVATOR"
}


function setup_prefix
{
    WINEPREFIX=$1
    WINEARCH=$2    

    echo "Initializing prefix '$WINEPREFIX' with archtecture $WINEARCH..."
    echo ""

    if [ "$WINELOADER" == "" ];
    then
        echo "No Wine environment loaded detected."
        echo "Trying with default one for ${WINEARCH}."
        echo ""

        if [ -f "$HOME/.default_${WINEARCH}_env" ];
        then
            source "$HOME/.default_${WINEARCH}_env"
        else
            echo "No default Wine environment found for ${WINEARCH}."
            abort "Install at least one win 'install_wine'"
        fi
    fi

    wine_boot

    if ! [ "$?" == "0" ];
    then
        echo "Initialization failed. Maybe a permissions problem."
        abort "Do chmod -R 770 in '$1' and try again."
    fi    

    install_activator $WINEPREFIX $WINEARCH

    echo "Initialization done."
    echo ""
}


function usage
{
    echo "Usage: win_prepare [prefix name] [win32|win64]"
    echo ""
    echo "Setups a new Wine prefix."
    echo ""
    echo "All WINE prefixes goes in ~/.local/share/wineprefixes by default."
    echo "To use another location, set it in WIN_ROOT environment variable."
    echo "If no architecture is selected, win64 is used by default."
    echo ""
    echo "If an existing prefix is detected, and no activator is found there,"
    echo "one new will be created."
    echo ""
    echo "If no prefix name is given, the defaults ones will be used:"
    echo "~\$/.wine32 and ~\$/.wine64 (for 32 and 64 bits respectively)."
    echo ""
}


if [ "$1" == "-h" ] || [ "$1" == "--h" ];
then
    usage
    exit 1
fi




PREFIX_NAME=$1
ARCH=$2


if [ "$PREFIX_NAME" == "" ];
then
    PREFIX_NAME=".wine64"
    ARCH="win64"

elif [ "$1" == "win32" ];
then
    PREFIX_NAME=".wine32"
    ARCH="win32"

elif [ "$1" == "win64" ];
then
    PREFIX_NAME=".wine64"
    ARCH="win64"
fi


if ! [ "$ARCH" == "" ];
then
    if ! [ "$ARCH" == "win32" ] && ! [ "$ARCH" == "win64" ];
    then
        abort "Invalid architecture '$ARCH'. Must be win32 or win64."
    fi
fi


if ! [ "$WIN_ROOT" == "" ] && [ -d "$WIN_ROOT" ];
then
    echo "Using '$WIN_ROOT' as prefixes root."

    echo "Testing $WIN_ROOT for write permissions ..."
    touch "$WIN_ROOT/touched"

    if ! [ "$?" == "0" ];
    then
        abort "ERROR: Cannot write in '$WIN_ROOT'"
    else
        rm "$WIN_ROOT/touched"
        echo "All seems OK."
    fi

elif [ "$PREFIX_NAME" == ".wine32" ] || [ "$PREFIX_NAME" == ".wine64" ];
then
    WIN_ROOT=$HOME

else
    WIN_ROOT=$HOME/.local/share/wineprefixes
fi


echo "Checking if a prefix '$PREFIX_NAME' already exists in '$WIN_ROOT' ..."

if [ -d "$WIN_ROOT/$WIN_ROOT/dosdevices" ];
then
    echo "There is already a WINE prefix named '$PREFIX_NAME' here."

    if ! [ -f "$WIN_ROOT/$PREFIX_NAME/activate" ];
    then
        echo "No activator found. One new will be generated."

        if [ -d "$WIN_ROOT/$PREFIX_NAME/drive_c/Program Files (x86)" ];
        then
            echo "It seems a win64 prefix."
            ARCH=win64
        else
            echo "It seems a win32 prefix."
            ARCH=win32
        fi

        install_activator "$WIN_ROOT/$PREFIX_NAME" $ARCH
    fi

else
    setup_prefix "$WIN_ROOT/$PREFIX_NAME" $ARCH
fi


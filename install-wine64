#!/bin/bash

function abort
{
    REASON=$1

    if [ "$REASON" == "" ];
    then
        echo $REASON
    fi

    echo ""
    
    exit 1
}


if ! [ "$TERMUX_VERSION" == "" ];
then
    abort "This script isn't for Termux."
fi


sudo -v

if ! [ "$?" == "0" ];
then
    abort "You need to be root, or have sudo permissions."
fi




DEFAULT_WINE_VARIANT="staging"
DEFAULT_WINE_VERSION="8.0.0"

WINE_VARIANT=$1
WINE_VERSION=$2

if [ "$WINE_VARIANT" == "" ];
then
    WINE_VARIANT=$DEFAULT_WINE_VARIANT
fi

if [ "$WINE_VERSION" == "" ];
then
    WINE_VERSION=$DEFAULT_WINE_VERSION
fi


WINE_BUILDS_URL="https://dl.winehq.org/wine-builds"
DEBIAN_OLDSTABLE_BUILDS_URL="$WINE_BUILDS_URL/debian/dists/bullseye"

WINE_SOURCES_URL="$DEBIAN_OLDSTABLE_BUILDS_URL/winehq-bullseye.sources"
WINE_GPG_URL="$WINE_BUILDS_URL/winehq.key"


if [ -f "/opt/wine-${WINE_VARIANT}/bin/wine64" ];
then
    abort "Wine (64 bits) is already installed."
fi


if ! [ -f "/usr/lib/aarch64-linux-gnu/libvkd3d.so.1" ];
then
    sudo "$HOME/install-wine64-deps"

    if ! [ "$?" == "0" ];
    then
        abort "Some required dependencies failed to install."
    fi
fi


echo ""


sudo dpkg --print-foreign-architectures | grep amd64 > /dev/null

if ! [ "$?" == "0" ];
then
    sudo dpkg --add-architecture amd64
    echo "Added AMAD64 architecture."
fi


echo -n "Checking if Wine site is available..."
curl -s https://dl.winehq.org > /dev/null

if [ "$?" == "0" ];
then
    WINE_URL_OK=1
    echo "OK"
else
    echo "ERROR"
fi


if ! [ "$WINE_URL_OK" == "1" ];
then
    echo "Failed connecting Wine site."
    echo "Using cached package."
    echo ""

    USE_CACHED_WINE=1
fi


if ! [ -f "/etc/apt/keyrings/winehq-archive.key" ];
then
    if ! [ -d "/etc/apt/keyrings" ];
    then
        sudo mkdir "/etc/apt/keyrings"
    fi


    if ! [ "$USE_CACHED_WINE" == "1" ];
    then
        sudo wget -O /etc/apt/keyrings/winehq-archive.key $WINE_GPG_URL
    else
        sudo cp "$HOME/deb/winehq.key" /etc/apt/keyrings/
    fi


    if ! [ "$?" == "0" ];
    then
        abort "Failed adding GPG key."
    fi

    echo "Added GPG key to keyrings."
fi


if ! [ "$USE_CACHED_WINE" == "1" ];
then
    echo "Cleaning old Wine downloads..."
    rm $HOME/wine*.deb > /dev/null


    echo ""
    echo "Checking for updated APT sources.list..."
    echo "----------------------------------------"
    sudo wget -NP /etc/apt/sources.list.d/ $WINE_SOURCES_URL
    
    if [ "$?" == "0" ];
    then
        echo "Updated sources.list in APT database."
    fi


    echo ""
    echo "Updating APT database..."
    echo "------------------------"

    sudo apt update


    echo ""
    echo "Downloading wine-${WINE_VARIANT} (${WINE_VERSION})..."
    echo "-----------------------------------------------------"

    apt download wine-$WINE_VARIANT:amd64=$WINE_VERSION~bullseye-1
    apt download wine-$WINE_VARIANT-amd64:$WINE_VERSION~bullseye-1
fi


echo ""
echo "Installing ..."
echo "--------------"


if ! [ "$USE_CACHED_WINE" == "1" ];
then
    dpkg-deb -x $(ls wine-${WINE_VARIANT}_*amd64.deb) \
            "/var/tmp/wine"


    dpkg-deb -x $(ls wine-${WINE_VARIANT}-amd64*.deb) \
            "/var/tmp/wine"
else
    dpkg-deb -x $(ls $HOME/deb/wine-${WINE_VARIANT}_*amd64.deb) \
            "/var/tmp/wine"


    dpkg-deb -x $(ls $HOME/deb/wine-${WINE_VARIANT}-amd64*.deb) \
            "/var/tmp/wine"
fi


if ! [ -f "/var/tmp/wine/opt/wine-${WINE_VARIANT}/bin/wine64" ];
then
    abort "Failed extracting Wine64 in /var/tmp/wine."
fi


sudo cp -r /var/tmp/wine/opt/wine-${WINE_VARIANT} /opt/

sudo cp -r /var/tmp/wine/usr/share/doc \
           /wine-${WINE_VARIANT} /usr/share/doc/

sudo cp -r /var/tmp/wine/usr/share/lintian/overrides \
           /wine-${WINE_VARIANT}-amd64/usr/share/lintian/overrides/


UNINSTALLER="$HOME/wine64-uninstaller"

echo "#!/bin/bash" > "$UNINSTALLER"
echo "" >> "$UNINSTALLER"
echo "if ! [ -f \"/opt/wine-${WINE_VARIANT}/bin/wine64\" ];" >> "$UNINSTALLER"
echo "then" >> "$UNINSTALLER"
echo "    echo \"Didn't found Wine64 installed.\"" >> "$UNINSTALLER"
echo "    exit 1" >> "$UNINSTALLER"
echo "fi" >> "$UNINSTALLER"
echo "" >> "$UNINSTALLER"
echo "sudo rm -rf /opt/wine-${WINE_VARIANT}" >> "$UNINSTALLER"
echo "sudo rm -rf /usr/share/doc/wine-${WINE_VARIANT}" >> "$UNINSTALLER"

echo "sudo rm -rf /usr/share/lintian/overrides/wine-${WINE_VARIANT-amd64}" \
     >> "$UNINSTALLER"

echo "" >> "$UNINSTALLER"

echo "Done." >> "$UNINSTALLER"
echo "" >> "$UNINSTALLER"


sudo boxify /opt/wine-${WINE_VARIANT}/bin/wine64 /usr/local/bin/wine64


echo "Finished. Execute ${UNINSTALLER} to remove Wine."
echo ""













#!/bin/bash

function abort
{
    REASON=$1

    if [ "$REASON" == "" ];
    then
        echo $REASON
    fi

    echo ""
    
    exit 1
}


function usage
{
    echo "Usage: install_wine32_for_arm [branch] [version]"
    echo ""
    echo "Branch is one of stable, staging or devel."
    echo "Default branch: staging"
    echo "Default version: 9.3"
    echo ""
}


SCRIPT_DIR=$(realpath $(dirname $0))




if [ "$1" == "-h" ] || [ "$1" == "--help" ];
then
    usage
    abort
fi


WINE_ARCH="i386"
WINE_BRANCH=$1
WINE_VERSION=$2


source "$SCRIPT_DIR/packages_arch" --quiet

if ! [ "$PACKAGES_ARCH" == "armhf" ] && ! [ "$PACKAGES_ARCH" == "arm64" ];
then
    abort "This script isn't intended for x86 machines."
fi


if ! [ "$TERMUX_VERSION" == "" ];
then
    abort "This script isn't for Termux."
fi


if ! [ "$ANDROID_DATA" == "" ];
then
    IN_ANDROID=1
fi


DISTRO_VERSION_NAME=$("$SCRIPT_DIR/os_version_name")

if ! [ "$DISTRO_VERSION_NAME" == "bullseye" ];
then
    abort "A Debian bullseye distro is needed."
fi


CACHE="$SCRIPT_DIR/cache/debian/bullseye"


if [ "$IN_ANDROID" == "1" ];
then
    echo "We are in Android, so, we'll use the cached Wine 9.3 directly"
    echo "because Box86-64 doesn't support newer versions yet."
    echo ""

    USE_CACHE=1
fi


"$SCRIPT_DIR/install_deps_for_armhf"


if [ "$IN_ANDROID" == "1" ];
then
    WINE_BRANCH="staging"
    WINE_VERSION="9.3"  
else
    if [ "$WINE_BRANCH" == "" ];
    then
        WINE_BRANCH="staging"

        echo "No branch specified. Using 'staging' by default."
	    echo ""
    fi

    if [ "$WINE_VERSION" == "" ];
    then
        WINE_VERSION="9.3"

        echo "No version specified. Using 9.3 by default."
        echo ""
    fi
fi


if ! ["$IN_ANDROID" == "1" ];
then
    source "$SCRIPT_DIR/check_site"

    if ! [ "$WINE_URL_OK" == "1" ];
    then
        USE_CACHE=1

        echo "Can't download Wine. Using cached version."
        echo ""
    fi
fi


echo ""
echo "Installing Wine ${WINE_BRANCH} ${WINE_VERSION} (${WINE_ARCH}) ..."
echo "-----------------------------------------------------------------"

WINE_TMP="/var/tmp/wine-${WINE_VERSION}"

if [ "$IN_ANDROID" == "1" ] || [ "$USE_CACHE" == "1" ];
then
    PACKAGE_1="wine-${WINE_BRANCH}_${WINE_VERSION}"
    PACKAGE_1+="~bullseye-1_${WINE_ARCH}.deb"

    PACKAGE_2="wine-${WINE_BRANCH}-${WINE_ARCH}_${WINE_VERSION}"
    PACKAGE_2+="~bullseye-1_${WINE_ARCH}.deb"

    dpkg-deb -x "${CACHE}/${PACKAGE_1}" "${WINE_TMP}"

    if ! [ "$?" == "0" ];
    then
        abort "Failed extracting '${PACKAGE_1}'."
    fi

    dpkg-deb -x "${CACHE}/${PACKAGE_1}" "${WINE_TMP}"

    if ! [ "$?" == "0" ];
    then
        abort "Failed extracting '${PACKAGE_2}'."
    fi

else
    "$SCRIPT_DIR/download_wine" $WINE_BRANCH $WINE_VERSION $WINE_ARCH

    if ! [ -f "${WINE_TMP}/extract" ];
    then
        abort "Can't continue with the install."
    fi    
fi

"$SCRIPT_DIR/install_unpacked_wine" "${WINE_TMP}"


echo ""
echo "Done."
echo ""
